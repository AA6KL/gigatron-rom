_startAddress_      EQU                     0x0200
convertEqOp         EQU                     0x7fa0
convertNeOp         EQU                     0x7fa9
convertLeOp         EQU                     0x7fb2
convertGeOp         EQU                     0x7fbb
convertLtOp         EQU                     0x7fc4
convertGtOp         EQU                     0x7fcd
multiply16bit       EQU                     0x7fd6
divide16bit         EQU                     0x7ea0
random16bit         EQU                     0x7ef6
shiftLeft4bit       EQU                     0x7da0
shiftLeft8bit       EQU                     0x7daa
shiftRight1bit      EQU                     0x7db4
shiftRight2bit      EQU                     0x7dbe
shiftRight3bit      EQU                     0x7dc8
shiftRight4bit      EQU                     0x7dd2
shiftRight5bit      EQU                     0x7ddc
shiftRight6bit      EQU                     0x7de6
shiftRight7bit      EQU                     0x7df0
shiftRight8bit      EQU                     0x7ca0
resetVideoTable     EQU                     0x7caa
scanlineMode        EQU                     0x7cc6
waitVBlank          EQU                     0x7cda
clearRegion         EQU                     0x7ba0
clearCursorRow      EQU                     0x7aa0
drawLine            EQU                     0x79a0
drawLineExt         EQU                     0x78a0
drawLineDelta1      EQU                     0x77a0
printText           EQU                     0x7adf
printDigit          EQU                     0x76a0
printInt16          EQU                     0x75a0
printChar           EQU                     0x74a0
printHexByte        EQU                     0x76c2
printHexWord        EQU                     0x77e5
newLineScroll       EQU                     0x73a0
resetAudio          EQU                     0x72a0
playMidi            EQU                     0x71a0
playMidiAsync       EQU                     0x7beb
midiStartNote       EQU                     0x70a0
convertEqOpAddr     EQU                     0x00E2
convertNeOpAddr     EQU                     0x00E4
convertLeOpAddr     EQU                     0x00E6
convertGeOpAddr     EQU                     0x00E8
convertLtOpAddr     EQU                     0x00EA
convertGtOpAddr     EQU                     0x00EC

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
register10          EQU                     0x0024
register11          EQU                     0x0026
register12          EQU                     0x0028
register13          EQU                     0x002A
fgbgColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C
textScroll          EQU                     register0 + 0x1E

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/conv_conds.i
%include            include/audio.i
%include            include/clear_screen.i
%include            include/graphics.i
%include            include/print_text.i
%include            include/macros.i

; Labels
_entryPoint_        EQU                     0x0200
_100                EQU                     0x0253
_101                EQU                     0x025d
_102                EQU                     0x0267
_103                EQU                     0x0271
_104                EQU                     0x0280
_105                EQU                     0x028a
_110                EQU                     0x0299
_120                EQU                     0x029d
_130                EQU                     0x02a1
_140                EQU                     0x02b2
_150                EQU                     0x02c1
_160                EQU                     0x02cd
_170                EQU                     0x02db
_180                EQU                     0x02e7
_190                EQU                     0x08a7
_200                EQU                     0x08b5
_210                EQU                     0x08c3
_220                EQU                     0x08d1
_230                EQU                     0x08d6
_240                EQU                     0x08db
_250                EQU                     0x08ea
_end_0x0350         EQU                     0x08ea
_end_0x0352         EQU                     0x08ec
_next_0x029d        EQU                     0x029d
_next_0x02a1        EQU                     0x02a1
_if_0x02d7          EQU                     0x02cd
_if_0x02e9          EQU                     0x02db
_if_0x02fb          EQU                     0x02e7
_page_0x08a0        EQU                     0x08a0
_if_0x030d          EQU                     0x08a7

; Variables
_N                  EQU                     0x0030
_K                  EQU                     0x0032
_M                  EQU                     0x0034
_L                  EQU                     0x0036

; Strings
usrStr_0x7cf1       EQU                     0x7cf1
usrStr_0x7cf1       DB                      13 'INTERFACE AGE'
usrStr_0x76f2       EQU                     0x76f2
usrStr_0x76f2       DB                      13 ' PRIME-NUMBER'
usrStr_0x79f5       EQU                     0x79f5
usrStr_0x79f5       DB                      10 ' BENCHMARK'
usrStr_0x75ef       EQU                     0x75ef
usrStr_0x75ef       DB                      8 ' PROGRAM'
usrStr_0x73ee       EQU                     0x73ee
usrStr_0x73ee       DB                      12 'For Gigatron'
usrStr_0x72cd       EQU                     0x72cd
usrStr_0x72cd       DB                      9 ' gtBASIC '
usrStr_0x7ff9       EQU                     0x7ff9
usrStr_0x7ff9       DB                      4 'DONE'

; Code
_entryPoint_        Initialise              
                    InitialiseCcOps                                         ; INIT

_100                PrintString             usrStr_0x7cf1                   ; PRINT "INTERFACE AGE";

_101                PrintString             usrStr_0x76f2                   ; PRINT " PRIME-NUMBER";

_102                PrintString             usrStr_0x79f5                   ; PRINT " BENCHMARK";

_103                PrintString             usrStr_0x75ef
                    LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; PRINT " PROGRAM"

_104                PrintString             usrStr_0x73ee                   ; PRINT "For Gigatron";

_105                PrintString             usrStr_0x72cd
                    LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; PRINT " gtBASIC "

_110                LDI                     1
                    STW                     _N                              ; FOR N=1 TO 200

_120                LDI                     2
                    STW                     _K                              ; FOR K=2 TO 100

_130                LDW                     _N
                    STW                     mathX
                    LDW                     _K
                    STW                     mathY
                    LDWI                    divide16bit
                    CALL                    giga_vAC
                    LDW                     mathRem
                    STW                     _M                              ; M=N % K

_140                LDW                     _N
                    STW                     mathX
                    LDW                     _K
                    STW                     mathY
                    LDWI                    divide16bit
                    CALL                    giga_vAC
                    STW                     _L                              ; L=N / K

_150                LDW                     _L
                    CALL                    convertEqOpAddr
                    BEQ                     _160                
                    LDWI                    _200
                    CALL                    giga_vAC                        ; IF L=0 THEN GOTO 200

_160                LDW                     _L
                    SUBI                    1
                    CALL                    convertEqOpAddr
                    BEQ                     _170                
                    LDWI                    _190
                    CALL                    giga_vAC                        ; IF L=1 THEN GOTO 190

_170                LDW                     _M
                    CALL                    convertGtOpAddr
                    BEQ                     _180                
                    LDWI                    _190
                    CALL                    giga_vAC                        ; IF M>0 THEN GOTO 190

_180                LDW                     _M
                    CALL                    convertEqOpAddr
                    BEQ                     _190                
                    STW                     0xe0
                    LDWI                    _page_0x08a0
                    CALL                    giga_vAC
_page_0x08a0        LDW                     0xe0
                    LDWI                    _210
                    CALL                    giga_vAC                        ; IF M=0 THEN GOTO 210

_190                ForNextLoopUp           _K _130                 100     ; NEXT K

_200                PrintVarInt16           _N
                    LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; PRINT N

_210                ForNextLoopUp           _N _120                 200     ; NEXT N

_220                LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; PRINT

_230                LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; PRINT

_240                PrintString             usrStr_0x7ff9
                    LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; PRINT "DONE"

_end_0x0350         BRA                     _end_0x0350                     ; END

_end_0x0352         BRA                     _end_0x0352                     ; END


