_startAddress_      EQU                     0x0200
convertEqOp         EQU                     0x7fa0
convertNeOp         EQU                     0x7fa9
convertLeOp         EQU                     0x7fb2
convertGeOp         EQU                     0x7fbb
convertLtOp         EQU                     0x7fc4
convertGtOp         EQU                     0x7fcd
multiply16bit       EQU                     0x7fd6
divide16bit         EQU                     0x7ea0
random16bit         EQU                     0x7ef6
shiftLeft4bit       EQU                     0x7da0
shiftLeft8bit       EQU                     0x7daa
shiftRight1bit      EQU                     0x7db4
shiftRight2bit      EQU                     0x7dbe
shiftRight3bit      EQU                     0x7dc8
shiftRight4bit      EQU                     0x7dd2
shiftRight5bit      EQU                     0x7ddc
shiftRight6bit      EQU                     0x7de6
shiftRight7bit      EQU                     0x7df0
shiftRight8bit      EQU                     0x7ca0
resetVideoTable     EQU                     0x7caa
scanlineMode        EQU                     0x7cc6
clearRegion         EQU                     0x7ba0
clearCursorRow      EQU                     0x7aa0
printText           EQU                     0x7cda
printDigit          EQU                     0x79a0
printInt16          EQU                     0x78a0
printChar           EQU                     0x77a0
printHexByte        EQU                     0x79c2
printHexWord        EQU                     0x7adf
newLineScroll       EQU                     0x76a0
resetAudio          EQU                     0x75a0
playMidi            EQU                     0x74a0
playMidiAsync       EQU                     0x7beb
midiStartNote       EQU                     0x73a0
convertEqOpAddr     EQU                     0x00E2
convertNeOpAddr     EQU                     0x00E4
convertLeOpAddr     EQU                     0x00E6
convertGeOpAddr     EQU                     0x00E8
convertLtOpAddr     EQU                     0x00EA
convertGtOpAddr     EQU                     0x00EC

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
textColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/conv_conds.i
%include            include/audio.i
%include            include/graphics.i
%include            include/clear_screen.i
%include            include/print_text.i
%include            include/macros.i

; Labels
_entryPoint_        EQU                     0x0200
_end_0x0313         EQU                     0x08b2
_end_0x0315         EQU                     0x08b4
_next_0x0256        EQU                     0x0256
_page_0x08a0        EQU                     0x08a0

; Variables
_z                  EQU                     0x0030
_i                  EQU                     0x0032
_a                  EQU                     0x0034
_b                  EQU                     0x0036
_c                  EQU                     0x0038
_d                  EQU                     0x003a
_e                  EQU                     0x003c

; Strings
usrStr_0x7ff9       EQU                     0x7ff9
usrStr_0x7ff9       DB                      1 ' '

; Code
_entryPoint_        Initialise              
                    InitialiseCcOps                                         ; INIT

                    LDI                     3
                    STW                     _z                              ; z = 3

                    LDI                     0
                    STW                     _i                              ; for i=0 to 5

_next_0x0256        LDI                     16
                    STW                     _a                              ; a = &h10

                    LDW                     _a
                    ADDI                    100
                    STW                     _b                              ; b = a + 100

                    LDWI                    -1
                    SUBW                    _a
                    SUBW                    _b
                    CALL                    convertNeOpAddr
                    STW                     _c
                    PEEK                    
                    STW                     _d                              ; c = NOT a <> b : d = peek(c)

                    LDWI                    0xaa55
                    XORW                    _a
                    ORW                     _c
                    STW                     0xd0
                    LDWI                    0xffff
                    ANDW                    0xd0
                    STW                     _e                              ; e = &hAA55 XOR a OR c AND &hFFFF

                    LDW                     _z
                    ADDI                    1
                    STW                     _z                              ; z = z + 1

                    PrintVarInt16           _a
                    PrintString             usrStr_0x7ff9
                    PrintVarInt16           _b
                    PrintString             usrStr_0x7ff9
                    PrintVarInt16           _c
                    PrintString             usrStr_0x7ff9
                    LDW                     _d
                    PrintAcHexByte          
                    PrintString             usrStr_0x7ff9
                    LDW                     _e
                    PrintAcHexWord          
                    PrintString             usrStr_0x7ff9
                    PrintVarInt16           _z
                    LDWI                    newLineScroll
                    STW                     0xe0
                    LDWI                    _page_0x08a0
                    CALL                    giga_vAC
_page_0x08a0        LDW                     0xe0
                    CALL                    giga_vAC
                    ForNextLoopUp           _i _next_0x0256 5               ; print a;" ";b;" ";c;" ";hex$(d);" ";hexw$(e);" ";z : next i

_end_0x0313         BRA                     _end_0x0313                     ; END

_end_0x0315         BRA                     _end_0x0315                     ; END


