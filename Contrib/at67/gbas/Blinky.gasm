_startAddress_      EQU                     0x0200
convertEqOp         EQU                     0x7fa0
convertNeOp         EQU                     0x7fa9
convertLeOp         EQU                     0x7fb2
convertGeOp         EQU                     0x7fbb
convertLtOp         EQU                     0x7fc4
convertGtOp         EQU                     0x7fcd
multiply16bit       EQU                     0x7fd6
divide16bit         EQU                     0x7ea0
random16bit         EQU                     0x7ef6
shiftLeft4bit       EQU                     0x7da0
shiftLeft8bit       EQU                     0x7daa
shiftRight1bit      EQU                     0x7db4
shiftRight2bit      EQU                     0x7dbe
shiftRight3bit      EQU                     0x7dc8
shiftRight4bit      EQU                     0x7dd2
shiftRight5bit      EQU                     0x7ddc
shiftRight6bit      EQU                     0x7de6
shiftRight7bit      EQU                     0x7df0
shiftRight8bit      EQU                     0x7ca0
resetVideoTable     EQU                     0x7caa
scanlineMode        EQU                     0x7cc6
waitVBlank          EQU                     0x7cda
clearRegion         EQU                     0x7ba0
clearCursorRow      EQU                     0x7aa0
drawLine            EQU                     0x79a0
drawLineExt         EQU                     0x78a0
drawLinePixel       EQU                     0x7cf1
printText           EQU                     0x7adf
printDigit          EQU                     0x77a0
printInt16          EQU                     0x76a0
printChar           EQU                     0x75a0
printHexByte        EQU                     0x77c2
printHexWord        EQU                     0x74a0
newLineScroll       EQU                     0x73a0
resetAudio          EQU                     0x74b9
playMidi            EQU                     0x72a0
playMidiAsync       EQU                     0x7beb
midiStartNote       EQU                     0x71a0
convertEqOpAddr     EQU                     0x00E2
convertNeOpAddr     EQU                     0x00E4
convertLeOpAddr     EQU                     0x00E6
convertGeOpAddr     EQU                     0x00E8
convertLtOpAddr     EQU                     0x00EA
convertGtOpAddr     EQU                     0x00EC

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
register10          EQU                     0x0024
register11          EQU                     0x0026
register12          EQU                     0x0028
register13          EQU                     0x002A
fgbgColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C
textScroll          EQU                     register0 + 0x1E

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/conv_conds.i
%include            include/audio.i
%include            include/graphics.i
%include            include/clear_screen.i
%include            include/print_text.i
%include            include/macros.i

; Labels
_entryPoint_        EQU                     0x0200
_1                  EQU                     0x0253
_20                 EQU                     0x0253
_3                  EQU                     0x0253
_40                 EQU                     0x025f
_5                  EQU                     0x0253
_60                 EQU                     0x0284
_end_0x02a3         EQU                     0x0293

; Variables
_X                  EQU                     0x0030
_Y                  EQU                     0x0032
_I                  EQU                     0x0034
_P                  EQU                     0x0036

; Strings

; Code
_entryPoint_        Initialise              
                    InitialiseCcOps                                         ; INIT

_20                 LDI                     80
                    STW                     _X
                    LDI                     60
                    STW                     _Y
                    LDI                     0
                    STW                     _I                              ; X=160/2:Y=120/2:I=0

_40                 LDI                     2
                    STW                     mathX
                    LDW                     _Y
                    STW                     mathY
                    LDWI                    multiply16bit
                    CALL                    giga_vAC
                    STW                     0xd0
                    LDWI                    256
                    ADDW                    0xd0
                    PEEK                    
                    STW                     mathX
                    LDWI                    256
                    STW                     mathY
                    LDWI                    multiply16bit
                    CALL                    giga_vAC
                    ADDW                    _X
                    STW                     _P                              ; P=PEEK(256+2*Y)*256+X

_60                 LD                      _I
                    POKE                    _P
                    LDW                     _I
                    ADDI                    1
                    STW                     _I
                    LDWI                    _60
                    CALL                    giga_vAC                        ; POKE P,I:I=I+1:GOTO 60

_end_0x02a3         BRA                     _end_0x02a3                     ; END


