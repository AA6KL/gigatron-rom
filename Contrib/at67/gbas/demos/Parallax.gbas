_runtimePath_ "../runtime"
_runtimeStart_ &h06FF

' disable audio channels, 2,3,4, this overwrites the romType variable as well, (a reboot will re-initialise it)
def byte(&h0021) = 0x00

' free audio channel memory making it available to the compiler, (fragmented memory will be automatically coalesced)
free &h02FA,6
free &h03FA,6
free &h04FA,6

mode 1

load image, ../../images/gbas/Parallax.tga, &h0800

' hack to get around 'Loader.gcl' being resident in video memory
' to solve this issue you need to cut your image into horizontal strips
' and paste the &h5900 to &h5B00 strip AFTER loading has finished to
' avoid corrupting 'Loader.gcl', here we just draw some blue lines
' *NOTE* the compiler will NOT write to &h5900, &h5A00 or &h5B00 scanlines
poke 163, &h30
hline 0, &h51, 255
hline 0, &h52, 255
hline 0, &h53, 255

x0 = 0 : x1 = x0 : x2 = x1 : x3 = x2 : x4 = x3 : x5 = x4

speed1 = 128
    
loop:
    wait
    speed2 = speed1 LSL 1 : speed4 = speed2 LSL 1 : speed8 = speed4 LSL 1
    poke &h0101, x0.hi : x0 = x0 + speed8
    poke &h0131, x1.hi : x1 = x1 - speed4
    poke &h015B, x2.hi : x2 = x2 - speed2
    poke &h0179, x3.hi : x3 = x3 - speed1
    poke &h0183, x4.hi : x4 = x4 + speed1
    poke &h0193, x5.hi : x5 = x5 + speed2
    poke &h01A3, x5.hi
    poke &h01BB, x5.hi
    poke &h01D3, x5.hi
    
    gosub peek(17)
goto loop

254: speed1 = speed1 + 2 : if speed1 &&> 256 then speed1 = 256
     return
253: speed1 = speed1 - 2 : if speed1 &&< 64 then speed1 = 64
     return
191: speed1 = 128 : return
127: speed1 = 128 : return