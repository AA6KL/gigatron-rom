_startAddress_  EQU		0x0200
resetVideoTable EQU 0x7fa0
convertEqOp     EQU resetVideoTable - 0x0100
convertNeOp     EQU convertEqOp     + 9     
convertLeOp     EQU convertNeOp     + 9     
convertGeOp     EQU convertLeOp     + 9     
convertLtOp     EQU convertGeOp     + 9     
convertGtOp     EQU convertLtOp     + 9     
clearRegion     EQU resetVideoTable - 0x0200
clearCursorRow  EQU resetVideoTable - 0x0300
printText       EQU resetVideoTable - 0x0400
printDigit      EQU resetVideoTable - 0x0500
printVarInt16   EQU resetVideoTable - 0x0600
printChar       EQU resetVideoTable - 0x0700
printHexByte    EQU resetVideoTable - 0x0800
newLineScroll   EQU resetVideoTable - 0x0900
resetAudio      EQU resetVideoTable - 0x0A00
playMidi        EQU resetVideoTable - 0x0B00
midiStartNote   EQU resetVideoTable - 0x0C00
convertEqOpAddr EQU 0x00E2                  
convertNeOpAddr EQU 0x00E4                  
convertLeOpAddr EQU 0x00E6                  
convertGeOpAddr EQU 0x00E8                  
convertLtOpAddr EQU 0x00EA                  
convertGtOpAddr EQU 0x00EC                  

; Internal variables
register0       EQU     0x00a0
register1       EQU     register0 + 0x02
register2       EQU     register0 + 0x04
register3       EQU     register0 + 0x06
register4       EQU     register0 + 0x08
register5       EQU     register0 + 0x0A
register6       EQU     register0 + 0x0C
register7       EQU     register0 + 0x0E
register8       EQU     register0 + 0x10
register9       EQU     register0 + 0x12
textColour      EQU     register0 + 0x14
cursorXY        EQU     register0 + 0x16
midiStreamPtr   EQU     register0 + 0x18
midiDelay       EQU     register0 + 0x1A
frameCountPrev  EQU     register0 + 0x1C

; Includes
%include include/gigatron.i
%include include/audio.i
%include include/clear_screen.i
%include include/conv_conds.i
%include include/print_text.i
%include include/macros.i

; Labels
_entryPoint_    EQU		0x0200
_10             EQU		0x033b
_test           EQU		0x054d
_Big            EQU		0x0668
_next15         EQU		0x034b
_next16         EQU		0x034f
_next17         EQU		0x0353
_next18         EQU		0x0357
_next28         EQU		0x0538
_end_29         EQU		0x054b
0x0300          EQU		0x0300
0x0400          EQU		0x0400
0x0500          EQU		0x0500
0x0600          EQU		0x0600

; Variables
_z              EQU		0x0030
_b              EQU		0x0032
_printb         EQU		0x0034
_w              EQU		0x0036
_x              EQU		0x0038
_y              EQU		0x003a
_dog            EQU		0x003c
_cat            EQU		0x003e
_a              EQU		0x0040
_f              EQU		0x0042
_g              EQU		0x0044
_h              EQU		0x0046
_i              EQU		0x0048
_j              EQU		0x004a
_jj             EQU		0x004c
_ss             EQU		0x004e
_ii             EQU		0x0050

; Strings
usrStr_0x6fa0		EQU		0x6fa0
usrStr_0x6fa0		DB		1 ' '
usrStr_0x6fa2		EQU		0x6fa2
usrStr_0x6fa2		DB		1 '1'
usrStr_0x6fa4		EQU		0x6fa4
usrStr_0x6fa4		DB		2 '7f'
usrStr_0x6fa7		EQU		0x6fa7
usrStr_0x6fa7		DB		4 'b00b'
usrStr_0x6fac		EQU		0x6fac
usrStr_0x6fac		DB		25 'lalalalala23d455345634650'

; Code
_entryPoint_    Initialise	                        		; INIT

                LDI		33
                STW		_z                          		; let z = 33

                LDWI	1000
                ADDW	_z
                STW		_b                          		; b = z + 1000

                LDW		_b
                SUBI	1
                CALL	convertLeOpAddr
                STW		0xd0
                LDW		_b
                SUBI	1
                CALL	convertGeOpAddr
                STW		0xd2
                LDW		0xd0
                ADDW	0xd2
                STW		0xd2
                LDW		_b
                SUBI	33
                CALL	convertEqOpAddr
                STW		0xd4
                LDW		0xd2
                ADDW	0xd4
                STW		0xd4
                LDW		_b
                SUBI	32
                CALL	convertNeOpAddr
                STW		0xd6
                LDW		0xd4
                ADDW	0xd6
                STW		_b                          		; b = (b <= 1) + (b >= 1) + (b = 33) + (b <> 32)

                PrintVarInt16	_b
                PrintString	usrStr_0x6fa0
                LDW		_b
                SUBI	1
                CALL	convertEqOpAddr
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDWI	-1000
                ADDW	_b
                CALL	convertNeOpAddr
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_b
                SUBI	3
                CALL	convertLeOpAddr
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_b
                SUBI	1
                CALL	convertGtOpAddr
                CALLI	0x0300

0x0300          PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_b
                SUBI	2
                CALL	convertGeOpAddr
                PrintAcInt16	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print b;" ";b=1;" ";b<>1000;" ";b<=3;" ";b>1;" ";b>=2

                LDWI	0x6fa2
                STW		_w                          		; w = chr$(&h31)

                LDWI	0x6fa4
                STW		_x                          		; x = hex$(127)

                LDWI	0x6fa7
                STW		_y                          		; y = hexw$(&hb00b)

                LDI		31
                STW		_dog                        		; dog = 31

                LDWI	-2
                STW		_cat                        		; cat = -2

_10             LDW		_z
                ADDI	1
                STW		_i
                LDW		_dog
                SUBI	1
                STW		0xc0
                LDW		_cat
                STW		0xc2                        		; for i=z+1 to dog-1 step cat

_next15         LDI		1
                STW		_j                          		; for j = 1 to 0

_next16         LDI		1
                STW		_jj                         		; for jj = 1 to 2 step 1

_next17         LDI		1
                STW		_ss                         		; for ss = 1 to 5 step 1

_next18         PrintInt16	0x003d
                PrintString	usrStr_0x6fa0
                PrintVarInt16	_i
                PrintString	usrStr_0x6fa0
                PrintVarInt16	_j
                PrintString	usrStr_0x6fa0
                LDW		_j
                ADDI	23
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                ADDI	55
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                ADDW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                SUBW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                SUBW	_j
                ADDI	1
                CALLI	0x0400

0x0400          PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                ADDW	_j
                ADDW	_j
                PrintAcInt16	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print 20*3+1;" ";i;" ";j;" ";j+23;" ";i+55;" ";i+j;" ";i-j;" ";i-j+1;" ";i+j+j

                ForNextLoopUp	_ss _next18 5       		; next ss

                ForNextLoopUp	_jj _next17 2       		; next jj

                ForNextLoopDown	_j _next16 0        		; next j

                ForNextLoopStepDown	_i _next15 0xc0 0xc2                                                		; next i

                LDWI	_test
                CALL	giga_vAC                    		; gosub   test

                LDW		_w
                PrintAcHexWord	
                PrintString	usrStr_0x6fa0
                LDW		_x
                PrintAcHexWord	
                PrintString	usrStr_0x6fa0
                LDW		_y
                PrintAcHexWord	
                PrintString	usrStr_0x6fa0
                LDW		_b
                ADDI	60
                PrintAcChar	
                PrintString	usrStr_0x6fa0
                LDWI	48
                PrintAcChar	
                PrintString	usrStr_0x6fa0
                LDWI	0x0021
                PEEK	
                ANDI	252
                PrintAcHexByte	
                PrintString	usrStr_0x6fa0
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(w);" ";hexw$(x);" ";hexw$(y);" ";chr$(b+60);" ";chr$(&h30);" ";hex$(peek(&h21) AND &hFC);" "

                LDI		80
                CALLI	0x0500

0x0500          PrintAcHexByte	
                PrintString	usrStr_0x6fa0
                LDWI	-8531
                PrintAcHexWord	
                PrintString	usrStr_0x6fa0
                LDWI	-16657
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(80);" ";hexw$(&hdead);" ";hexw$(&hbeef)

                LDI		0
                STW		_ii                         		; for ii = 0 to 0 step 1

_next28         LDWI	_Big
                CALL	giga_vAC                    		; gosub Big

                ForNextLoopUp	_ii _next28 0       		; next ii

_end_29         BRA		_end_29                     		; END

_test           PUSH	
                LDW		_i
                ADDI	40
                PrintAcHexByte	
                PrintString	usrStr_0x6fa0
                LDW		_j
                ADDI	30
                PrintAcHexByte	
                PrintString	usrStr_0x6fa0
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(i+40);" ";hex$(j+30);" "

                LDW		_i
                ADDI	30
                PrintAcHexByte	
                PrintString	usrStr_0x6fa0
                LDW		_j
                ADDI	40
                PrintAcHexByte	
                PrintString	usrStr_0x6fa0
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(i+30);" ";hex$(j+40);" "

                PrintInt16	0x003d
                PrintString	usrStr_0x6fa0
                PrintVarInt16	_i
                PrintString	usrStr_0x6fa0
                PrintVarInt16	_j
                PrintString	usrStr_0x6fa0
                LDW		_j
                ADDI	23
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                CALLI	0x0600

0x0600          ADDI	55
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                ADDW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                SUBW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                SUBW	_j
                ADDI	1
                PrintAcInt16	
                PrintString	usrStr_0x6fa0
                LDW		_i
                ADDW	_j
                ADDW	_j
                PrintAcInt16	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print 20*3+1;" ";i;" ";j;" ";j+23;" ";i+55;" ";i+j;" ";i-j;" ";i-j+1;" ";i+j+j

                POP		
                RET		                            		; return

_Big            PUSH	
                LDWI	0x0021
                PEEK	
                ANDI	252
                STW		_a                          		; a = peek(&h21) AND &hFC

                LDW		_a
                PrintAcHexByte	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(a)

                LDWI	-1
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(&hFFFF OR &h1111)

                LDWI	4369
                STW		_f                          		; f = &h1111

                LDWI	-21846
                STW		_g                          		; g = &hAAAA

                LDWI	-1
                SUBW	_g
                XORW	_f
                STW		_h                          		; h = NOT g XOR f

                LDW		_h
                PrintAcHexWord	
                PrintString	usrStr_0x6fa0
                PrintInt16	0x0038
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(h);" ";56

                LDWI	-8531
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(&hdead)

                LDWI	-28785
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(&b0000111100001111 OR &b1000000010000000)

                PrintString	usrStr_0x6fac           		; print "lalalalala23d455345634650";

                POP		
                RET		                            		; return


