_startAddress_  EQU		0x0200
clearRegion     EQU     0x7fa0
resetVideoTable EQU     clearRegion - 0x0100
clearCursorRow  EQU     clearRegion - 0x0200
printText       EQU     clearRegion - 0x0300
printDigit      EQU     clearRegion - 0x0400
printVarInt16   EQU     clearRegion - 0x0500
printChar       EQU     clearRegion - 0x0600
printHexByte    EQU     clearRegion - 0x0700
newLineScroll   EQU     clearRegion - 0x0800
resetAudio      EQU     clearRegion - 0x0900
playMidi        EQU     clearRegion - 0x0A00
midiStartNote   EQU     clearRegion - 0x0B00

; Internal variables
register0       EQU     0x00a0
register1       EQU     register0 + 0x02
register2       EQU     register0 + 0x04
register3       EQU     register0 + 0x06
register4       EQU     register0 + 0x08
register5       EQU     register0 + 0x0A
register6       EQU     register0 + 0x0C
register7       EQU     register0 + 0x0E
register8       EQU     register0 + 0x10
register9       EQU     register0 + 0x12
textColour      EQU     register0 + 0x14
cursorXY        EQU     register0 + 0x16
midiStreamPtr   EQU     register0 + 0x18
midiDelay       EQU     register0 + 0x1A
frameCountPrev  EQU     register0 + 0x1C

; Includes
%include include/gigatron.i
%include include/audio.i
%include include/clear_screen.i
%include include/print_text.i
%include include/macros.i

; Labels
_entryPoint_    EQU		0x0200
_10             EQU		0x024c
_test           EQU		0x0493
_Big            EQU		0x05bb
_next9          EQU		0x025c
_next10         EQU		0x026b
_next11         EQU		0x027a
_next12         EQU		0x0289
_next22         EQU		0x047c
_end_24         EQU		0x0491
0x0300          EQU		0x0300
0x0400          EQU		0x0400
0x0500          EQU		0x0500
0x0600          EQU		0x0600

; Variables
_z              EQU		0x0030
_b              EQU		0x0032
_w              EQU		0x0034
_x              EQU		0x0036
_y              EQU		0x0038
_dog            EQU		0x003a
_cat            EQU		0x003c
_a              EQU		0x003e
_f              EQU		0x0040
_g              EQU		0x0042
_h              EQU		0x0044
_i              EQU		0x0046
_j              EQU		0x0048
_jj             EQU		0x004a
_ss             EQU		0x004c
_ii             EQU		0x004e

; Strings
usrStr_0x6fa0		EQU		0x6fa0
usrStr_0x6fa0		DB		1 '1'
usrStr_0x6fa2		EQU		0x6fa2
usrStr_0x6fa2		DB		2 '7f'
usrStr_0x6fa5		EQU		0x6fa5
usrStr_0x6fa5		DB		4 'b00b'
usrStr_0x6faa		EQU		0x6faa
usrStr_0x6faa		DB		1 ' '
usrStr_0x6fac		EQU		0x6fac
usrStr_0x6fac		DB		25 'lalalalala23d455345634650'

; Code
_entryPoint_    Initialise	                        		; INIT

                LDI		33
                STW		_z                          		; let z = 33

                STW		_b                          		; b = z

                LDWI	0x6fa0
                STW		_w                          		; w = chr$(&h31)

                LDWI	0x6fa2
                STW		_x                          		; x = hex$(127)

                LDWI	0x6fa5
                STW		_y                          		; y = hexw$(&hb00b)

                LDI		31
                STW		_dog                        		; dog = 31

                LDWI	-2
                STW		_cat                        		; cat = -2

_10             LDW		_z
                ADDI	1
                STW		_i
                LDW		_dog
                SUBI	1
                STW		0xc0
                LDW		_cat
                STW		0xc2                        		; for i=z+1 to dog-1 step cat

_next9          LDWI	1
                STW		_j
                LDWI	3
                STW		0xc4
                LDWI	1
                STW		0xc6                        		; for j = 1 to 3

_next10         LDWI	1
                STW		_jj
                LDWI	2
                STW		0xc8
                LDWI	1
                STW		0xca                        		; for jj = 1 to 2 step 1

_next11         LDWI	1
                STW		_ss
                LDWI	5
                STW		0xcc
                LDWI	1
                STW		0xce                        		; for ss = 1 to 5 step 1

_next12         PrintInt16	0x003d
                PrintString	usrStr_0x6faa
                PrintVarInt16	_i
                PrintString	usrStr_0x6faa
                PrintVarInt16	_j
                PrintString	usrStr_0x6faa
                LDW		_j
                ADDI	23
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                ADDI	55
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                STW		0xe0
                LDWI	0x0300
                CALL	giga_vAC

0x0300          LDW		0xe0
                ADDW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                SUBW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                SUBW	_j
                ADDI	1
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                ADDW	_j
                ADDW	_j
                PrintAcInt16	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print 20*3+1;" ";i;" ";j;" ";j+23;" ";i+55;" ";i+j;" ";i-j;" ";i-j+1;" ";i+j+j

                ForNextLoopStepUp	_ss _next12 0xcc 0xce                                               		; next ss

                ForNextLoopStepUp	_jj _next11 0xc8 0xca                                               		; next jj

                ForNextLoopStepUp	_j _next10 0xc4 0xc6                                                		; next j

                ForNextLoopStepDown	_i _next9 0xc0 0xc2                                                 		; next i

                LDWI	_test
                CALL	giga_vAC                    		; gosub   test

                LDW		_w
                PrintAcHexWord	
                PrintString	usrStr_0x6faa
                LDW		_x
                PrintAcHexWord	
                PrintString	usrStr_0x6faa
                LDW		_y
                PrintAcHexWord	
                PrintString	usrStr_0x6faa
                LDW		_b
                PrintAcChar	
                PrintString	usrStr_0x6faa
                STW		0xe0
                LDWI	0x0400
                CALL	giga_vAC

0x0400          LDW		0xe0
                LDWI	48
                PrintAcChar	
                PrintString	usrStr_0x6faa
                LDWI	0x0021
                PEEK	
                ANDI	252
                PrintAcHexByte	
                PrintString	usrStr_0x6faa
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(w);" ";hexw$(x);" ";hexw$(y);" ";chr$(b);" ";chr$(&h30);" ";hex$(peek(&h21) AND &hFC);" "

                LDI		80
                PrintAcHexByte	
                PrintString	usrStr_0x6faa
                LDWI	-8531
                PrintAcHexWord	
                PrintString	usrStr_0x6faa
                LDWI	-16657
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(80);" ";hexw$(&hdead);" ";hexw$(&hbeef)

                LDWI	0
                STW		_ii
                LDWI	0
                STW		0xc0
                LDWI	1
                STW		0xc2                        		; for ii = 0 to 0 step 1

_next22         LDWI	_Big
                CALL	giga_vAC                    		; gosub Big

                ForNextLoopStepUp	_ii _next22 0xc0 0xc2                                               		; next ii

_end_24         BRA		_end_24                     		; END

_test           PUSH	
                LDW		_i
                ADDI	40
                PrintAcHexByte	
                PrintString	usrStr_0x6faa
                LDW		_j
                ADDI	30
                PrintAcHexByte	
                PrintString	usrStr_0x6faa
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(i+40);" ";hex$(j+30);" "

                LDW		_i
                ADDI	30
                PrintAcHexByte	
                PrintString	usrStr_0x6faa
                LDW		_j
                ADDI	40
                PrintAcHexByte	
                PrintString	usrStr_0x6faa
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(i+30);" ";hex$(j+40);" "

                STW		0xe0
                LDWI	0x0500
                CALL	giga_vAC

0x0500          LDW		0xe0
                PrintInt16	0x003d
                PrintString	usrStr_0x6faa
                PrintVarInt16	_i
                PrintString	usrStr_0x6faa
                PrintVarInt16	_j
                PrintString	usrStr_0x6faa
                LDW		_j
                ADDI	23
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                ADDI	55
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                ADDW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                SUBW	_j
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                SUBW	_j
                ADDI	1
                PrintAcInt16	
                PrintString	usrStr_0x6faa
                LDW		_i
                ADDW	_j
                ADDW	_j
                PrintAcInt16	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print 20*3+1;" ";i;" ";j;" ";j+23;" ";i+55;" ";i+j;" ";i-j;" ";i-j+1;" ";i+j+j

                POP		
                RET		                            		; return

_Big            PUSH	
                LDWI	0x0021
                PEEK	
                ANDI	252
                STW		_a                          		; a = peek(&h21) AND &hFC

                LDW		_a
                PrintAcHexByte	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hex$(a)

                LDWI	-1
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(&hFFFF OR &h1111)

                LDWI	4369
                STW		_f                          		; f = &h1111

                LDWI	-21846
                STW		_g                          		; g = &hAAAA

                LDWI	-1
                SUBW	_g
                XORW	_f
                STW		_h                          		; h = NOT g XOR f

                STW		0xe0
                LDWI	0x0600
                CALL	giga_vAC

0x0600          LDW		0xe0
                LDW		_h
                PrintAcHexWord	
                PrintString	usrStr_0x6faa
                PrintInt16	0x0038
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(h);" ";56

                LDWI	-8531
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(&hdead)

                LDWI	-28785
                PrintAcHexWord	
                LDWI	newLineScroll
                CALL	giga_vAC                    		; print hexw$(&b0000111100001111 OR &b1000000010000000)

                PrintString	usrStr_0x6fac           		; print "lalalalala23d455345634650";

                POP		
                RET		                            		; return


