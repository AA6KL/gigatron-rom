_startAddress_      EQU                     0x0200
initialiseCcOps     EQU                     0x7fa0
convertEqOp         EQU                     0x7fbf
convertNeOp         EQU                     0x7fc8
convertLeOp         EQU                     0x7fd1
convertGeOp         EQU                     0x7fda
convertLtOp         EQU                     0x7fe3
convertGtOp         EQU                     0x7fec
multiply16bit       EQU                     0x7ea0
divide16bit         EQU                     0x7da0
random16bit         EQU                     0x7ff5
shiftLeft4bit       EQU                     0x7ec3
shiftLeft8bit       EQU                     0x7ecd
shiftRight1bit      EQU                     0x7ed7
shiftRight2bit      EQU                     0x7ee1
shiftRight3bit      EQU                     0x7eeb
shiftRight4bit      EQU                     0x7ef5
shiftRight5bit      EQU                     0x7df6
shiftRight6bit      EQU                     0x7ca0
shiftRight7bit      EQU                     0x7caa
shiftRight8bit      EQU                     0x7cb4
scanlineMode        EQU                     0x7cbe
waitVBlank          EQU                     0x7cd2
resetVideoTable     EQU                     0x7ba0
clearScreen         EQU                     0x7aa0
clearRegion         EQU                     0x79a0
clearCursorRow      EQU                     0x78a0
drawLine            EQU                     0x77a0
drawLineExt         EQU                     0x76a0
drawLineDelta1      EQU                     0x75a0
drawLineCursor      EQU                     0x74a0
printText           EQU                     0x7bdb
printDigit          EQU                     0x73a0
printInt16          EQU                     0x72a0
printChar           EQU                     0x71a0
printHexByte        EQU                     0x73c2
printHexWord        EQU                     0x7ae6
newLineScroll       EQU                     0x70a0
resetAudio          EQU                     0x6fa0
playMidi            EQU                     0x0000
playMidiAsync       EQU                     0x7ce9
midiStartNote       EQU                     0x0000
convertEqOpAddr     EQU                     0x00E2
convertNeOpAddr     EQU                     0x00E4
convertLeOpAddr     EQU                     0x00E6
convertGeOpAddr     EQU                     0x00E8
convertLtOpAddr     EQU                     0x00EA
convertGtOpAddr     EQU                     0x00EC

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
register10          EQU                     0x0024
register11          EQU                     0x0026
register12          EQU                     0x0028
register13          EQU                     0x002A
fgbgColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C
miscFlags           EQU                     register0 + 0x1E

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/conv_conds.i
%include            include/audio.i
%include            include/clear_screen.i
%include            include/graphics.i
%include            include/print_text.i
%include            include/macros.i

; Labels
_entryPoint_        EQU                     0x0200
_1                  EQU                     0x0229
_2                  EQU                     0x0229
_3                  EQU                     0x0235
_4                  EQU                     0x023b
_5                  EQU                     0x023b
_6                  EQU                     0x0240
_7                  EQU                     0x0246
_8                  EQU                     0x024a
_9                  EQU                     0x0254
_10                 EQU                     0x0254
_11                 EQU                     0x025a
_12                 EQU                     0x0266
_end_0x0276         EQU                     0x0270

; Variables
_a                  EQU                     0x0030
_b                  EQU                     0x0032
_c                  EQU                     0x0034
_n                  EQU                     0x0036
_j                  EQU                     0x0038

; Strings

; Code
_entryPoint_        Initialise                                              ; INIT

_2                  LDI                     0
                    STW                     _a
                    LDI                     1
                    STW                     _b
                    LDI                     0
                    STW                     _c                              ; a(0)=0:b(0)=1:c(0)=0

_3                  LDW                     _n
                    ADDI                    1
                    STW                     _n                              ; n=n+1:printn;": ";

_5                  LDWI                    newLineScroll
                    CALL                    giga_vAC                        ; nexti:print:fori=0toj

_6                  STW                     _c
                    LDW                     _b
                    STW                     _a                              ; c=a(i)+b(i)+c:a(i)=b(i)

_7                  LDW                     _c
                    STW                     _b                              ; b(i)=c:ifc<10 c=0:goto9

_8                  LDW                     _c
                    SUBI                    10
                    STW                     _b
                    LDI                     1
                    STW                     _c                              ; b(i)=c-10:c=1

_10                 LDW                     _j
                    ADDI                    1
                    STW                     _j                              ; j=j+1

_11                 LDI                     0
                    STW                     _a
                    LDW                     _c
                    STW                     _b
                    LDI                     0
                    STW                     _c                              ; a(j)=0:b(j)=c:c(j)=0

_12                 LDWI                    newLineScroll
                    CALL                    giga_vAC
                    LDWI                    _3
                    CALL                    giga_vAC                        ; print:goto 3

_end_0x0276         BRA                     _end_0x0276                     ; END


