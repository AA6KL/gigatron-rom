_startAddress_      EQU                     0x0200
convertEqOp         EQU                     0x7fa0
convertNeOp         EQU                     0x7fa9
convertLeOp         EQU                     0x7fb2
convertGeOp         EQU                     0x7fbb
convertLtOp         EQU                     0x7fc4
convertGtOp         EQU                     0x7fcd
multiply16bit       EQU                     0x7fd6
divide16bit         EQU                     0x7ea0
random16bit         EQU                     0x7ef6
shiftLeft4bit       EQU                     0x7da0
shiftLeft8bit       EQU                     0x7daa
shiftRight1bit      EQU                     0x7db4
shiftRight2bit      EQU                     0x7dbe
shiftRight3bit      EQU                     0x7dc8
shiftRight4bit      EQU                     0x7dd2
shiftRight5bit      EQU                     0x7ddc
shiftRight6bit      EQU                     0x7de6
shiftRight7bit      EQU                     0x7df0
shiftRight8bit      EQU                     0x7ca0
scanlineMode        EQU                     0x7caa
waitVBlank          EQU                     0x7cbe
resetVideoTable     EQU                     0x7ba0
clearScreen         EQU                     0x7aa0
clearRegion         EQU                     0x79a0
clearCursorRow      EQU                     0x78a0
drawLine            EQU                     0x77a0
drawLineExt         EQU                     0x76a0
drawLineDelta1      EQU                     0x75a0
drawLineCursor      EQU                     0x74a0
printText           EQU                     0x7cd5
printDigit          EQU                     0x7bdd
printInt16          EQU                     0x73a0
printChar           EQU                     0x72a0
printHexByte        EQU                     0x71a0
printHexWord        EQU                     0x79e6
newLineScroll       EQU                     0x70a0
resetAudio          EQU                     0x71d0
playMidi            EQU                     0x6fa0
playMidiAsync       EQU                     0x78e2
midiStartNote       EQU                     0x6ea0
initialiseCcOps     EQU                     0x74e1
convertEqOpAddr     EQU                     0x00E2
convertNeOpAddr     EQU                     0x00E4
convertLeOpAddr     EQU                     0x00E6
convertGeOpAddr     EQU                     0x00E8
convertLtOpAddr     EQU                     0x00EA
convertGtOpAddr     EQU                     0x00EC

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
register10          EQU                     0x0024
register11          EQU                     0x0026
register12          EQU                     0x0028
register13          EQU                     0x002A
fgbgColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C
miscFlags           EQU                     register0 + 0x1E

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/audio.i
%include            include/clear_screen.i
%include            include/conv_conds.i
%include            include/graphics.i
%include            include/print_text.i
%include            include/macros.i

; Labels
_entryPoint_        EQU                     0x0200
_1                  EQU                     0x0211
_10                 EQU                     0x0219
_20                 EQU                     0x021d
_30                 EQU                     0x0222
_40                 EQU                     0x0233
_50                 EQU                     0x024a
_60                 EQU                     0x0258
_70                 EQU                     0x025c
_80                 EQU                     0x0261
_90                 EQU                     0x0272
_100                EQU                     0x0287
_110                EQU                     0x0297
_120                EQU                     0x029b
_130                EQU                     0x02a0
_140                EQU                     0x02b1
_150                EQU                     0x02c8
_160                EQU                     0x02d6
_170                EQU                     0x02da
_180                EQU                     0x02df
_190                EQU                     0x08a2
_200                EQU                     0x08bb
_math               EQU                     0x08d0
_end_0x037e         EQU                     0x08ee
_next_0x021d        EQU                     0x021d
_next_0x0266        EQU                     0x025c
_next_0x02ab        EQU                     0x029b
_next_0x02f4        EQU                     0x02da
_page_0x08a0        EQU                     0x08a0

; Variables
_x                  EQU                     0x0030
_y                  EQU                     0x0032
_i                  EQU                     0x0034
_p                  EQU                     0x0036
_sh                 EQU                     0x0038

; Strings

; Code
_entryPoint_        Initialise                                              ; INIT

_1                  LDI                     0
                    STW                     _x
                    LDI                     0
                    STW                     _y                              ; x = 0 : y = 0

_10                 LDI                     0
                    STW                     _i                              ; for i=0 to 19

_20                 LDWI                    _math
                    CALL                    giga_vAC                        ; gosub math

_30                 LDWI                    0x00b5
                    PEEK                    
                    ADDI                    7
                    STW                     _p
                    LDWI                    181
                    STW                     register0
                    LD                      _p
                    POKE                    register0                       ; p=peek(181)+7 : poke 181,p

_40                 LDW                     _x
                    STW                     drawLine_x1
                    LDI                     119
                    STW                     drawLine_y1
                    LDI                     159
                    STW                     drawLine_x2
                    LDI                     119
                    SUBW                    _y
                    STW                     drawLine_y2
                    DrawLine                                                ; line x,119, 159,119-y

_50                 ForNextLoopUp           _i _20                  19      ; next i

_60                 LDI                     19
                    STW                     _i                              ; for i=19 to 0

_70                 LDWI                    _math
                    CALL                    giga_vAC                        ; gosub math

_80                 LDWI                    0x00b5
                    PEEK                    
                    ADDI                    7
                    STW                     _p
                    LDWI                    181
                    STW                     register0
                    LD                      _p
                    POKE                    register0                       ; p=peek(181)+7 : poke 181,p

_90                 LDI                     159
                    STW                     drawLine_x1
                    LDW                     _y
                    STW                     drawLine_y1
                    LDW                     _x
                    STW                     drawLine_x2
                    LDI                     0
                    STW                     drawLine_y2
                    DrawLine                                                ; line 159,y, x,0

_100                ForNextLoopDown         _i _70                  0       ; next i

_110                LDI                     0
                    STW                     _i                              ; for i=0 to 19

_120                LDWI                    _math
                    CALL                    giga_vAC                        ; gosub math

_130                LDWI                    0x00b5
                    PEEK                    
                    ADDI                    7
                    STW                     _p
                    LDWI                    181
                    STW                     register0
                    LD                      _p
                    POKE                    register0                       ; p=peek(181)+7 : poke 181,p

_140                LDI                     0
                    STW                     drawLine_x1
                    LDW                     _y
                    STW                     drawLine_y1
                    LDI                     159
                    SUBW                    _x
                    STW                     drawLine_x2
                    LDI                     0
                    STW                     drawLine_y2
                    DrawLine                                                ; line 0,y, 159-x,0

_150                ForNextLoopUp           _i _120                 19      ; next i

_160                LDI                     19
                    STW                     _i                              ; for i=19 to 0

_170                LDWI                    _math
                    CALL                    giga_vAC                        ; gosub math

_180                LDWI                    0x00b5
                    PEEK                    
                    ADDI                    7
                    STW                     _p
                    LDWI                    181
                    STW                     register0
                    LD                      _p
                    POKE                    register0                       ; p=peek(181)+7 : poke 181,p

                    STW                     0xe0
                    LDWI                    _page_0x08a0
                    CALL                    giga_vAC
_page_0x08a0        LDW                     0xe0
_190                LDI                     159
                    SUBW                    _x
                    STW                     drawLine_x1
                    LDI                     119
                    STW                     drawLine_y1
                    LDI                     0
                    STW                     drawLine_x2
                    LDI                     119
                    SUBW                    _y
                    STW                     drawLine_y2
                    DrawLine                                                ; line 159-x,119, 0,119-y

_200                ForNextLoopDown         _i _170                 0       ; next i

                    LDWI                    _10
                    CALL                    giga_vAC                        ; goto 10

_math               PUSH                    
                    LDW                     _i
                    LSLW                    
                    STW                     _sh                             ; sh = (i<<1)

                    LDW                     _sh
                    ADDW                    _sh
                    ADDW                    _sh
                    ADDW                    _sh
                    ADDI                    4
                    STW                     _x                              ; x = sh + sh + sh + sh + 4

                    LDW                     _sh
                    ADDW                    _sh
                    ADDW                    _sh
                    ADDI                    3
                    STW                     _y                              ; y = sh + sh + sh + 3

                    POP                     
                    RET                                                     ; return

_end_0x037e         BRA                     _end_0x037e                     ; END


