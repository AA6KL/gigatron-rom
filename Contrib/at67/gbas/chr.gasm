_startAddress_      EQU                     0x0200
resetVideoTable     EQU                     0x7fa0
clearRegion         EQU                     0x7ea0
convertEqOp         EQU                     0x7fbc
convertNeOp         EQU                     0x7fc5
convertLeOp         EQU                     0x7fce
convertGeOp         EQU                     0x7fd7
convertLtOp         EQU                     0x7fe0
convertGtOp         EQU                     0x7fe9
multiply16bit       EQU                     0x7da0
divide16bit         EQU                     0x7ca0
random16bit         EQU                     0x7ff2
clearCursorRow      EQU                     0x7ba0
printText           EQU                     0x7dc3
printDigit          EQU                     0x7ddc
printInt16          EQU                     0x7aa0
printChar           EQU                     0x79a0
printHexByte        EQU                     0x78a0
printHexWord        EQU                     0x7eeb
newLineScroll       EQU                     0x77a0
resetAudio          EQU                     0x78ca
playMidi            EQU                     0x76a0
playMidiAsync       EQU                     0x7bdf
midiStartNote       EQU                     0x75a0

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
textColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/conv_conds.i
%include            include/audio.i
%include            include/clear_screen.i
%include            include/print_text_CALLI.i
%include            include/macros_CALLI.i

; Labels
_entryPoint_        EQU                     0x0200
_10                 EQU                     0x022e
_20                 EQU                     0x08ce
_end_22             EQU                     0x08d1
_next_0x0236        EQU                     0x0236
_next_0x023a        EQU                     0x023a
_next_0x023e        EQU                     0x023e
_next_0x0260        EQU                     0x0260
_next_0x0304        EQU                     0x02c2
0x08a0              EQU                     0x08a0

; Variables
_a                  EQU                     0x0030
_k                  EQU                     0x0032
_j                  EQU                     0x0034
_i                  EQU                     0x0036
_char               EQU                     0x0038

; Strings
usrStr_0x7ad9       EQU                     0x7ad9
usrStr_0x7ad9       DB                      28 'yahooowalllallllalalalwallla'
usrStr_0x7ffa       EQU                     0x7ffa
usrStr_0x7ffa       DB                      3 'yes'
usrStr_0x7ffe       EQU                     0x7ffe
usrStr_0x7ffe       DB                      1 ' '
usrStr_0x74a0       EQU                     0x74a0
usrStr_0x74a0       DB                      34 'wooooooooooooooooooooooooooooow!!!'
usrStr_0x7efa       EQU                     0x7efa
usrStr_0x7efa       DB                      3 'dog'

; Code
_entryPoint_        Initialise                                              ; INIT

_10                 LDI                     1
                    STW                     _a                              ; a =1

                    LDI                     0
                    STW                     _k                              ; for k = 0 to 1

_next_0x0236        LDI                     0
                    STW                     _j                              ; for j = 0 to 1

_next_0x023a        LDI                     0
                    STW                     _i                              ; for i = 0 to 1

_next_0x023e        PrintString             usrStr_0x7ad9                   ; print "yahooowalllallllalalalwallla";

                    PrintString             usrStr_0x7ffa
                    PrintString             usrStr_0x7ffe                   ; print "yes";" ";

                    PrintInt16              0x003d
                    PrintString             usrStr_0x7ffe                   ; print 20*3+1;" ";

                    LDI                     32
                    STW                     _char                           ; for char = 32 to 127

_next_0x0260        LDW                     _a
                    ADDI                    1
                    STW                     _a                              ; a = a + 1

                    LDW                     _char
                    ADDI                    1
                    ADDW                    _a
                    ADDW                    _a
                    ADDW                    _a
                    ADDI                    3
                    SUBW                    _a
                    SUBW                    _a
                    SUBW                    _a
                    SUBI                    4
                    STW                     0xd0
                    LDW                     _k
                    SUBW                    _k
                    ADDW                    0xd0
                    PrintAcChar                                             ; print chr$(char+1 +a+a+a - 32*0 + 50/0 + a/0 + 3 - a -a -a -4 + j*0 + (k-k));

                    ForNextLoopUp           _char _next_0x0260 127          ; next char

                    ForNextLoopUp           _i _next_0x023e 1               ; next i

                    ForNextLoopUp           _j _next_0x023a 1               ; next j

                    ForNextLoopUp           _k _next_0x0236 1               ; next k

                    PrintString             usrStr_0x74a0
                    CALLI                   newLineScroll                   ; print "wooooooooooooooooooooooooooooow!!!"

                    LDI                     0
                    STW                     _i                              ; for i = 0 to 6

_next_0x0304        PrintString             usrStr_0x7efa
                    PrintString             usrStr_0x7ffe
                    PrintVarInt16           _i
                    CALLI                   newLineScroll                   ; print "dog";" ";i

                    ForNextLoopUp           _i _next_0x0304 6               ; next i

                    CALLI                   0x08a0
0x08a0              Initialise                                              ; cls

_20                 CALLI                   _10                             ; goto 10

_end_22             BRA                     _end_22                         ; END


