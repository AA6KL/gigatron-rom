_startAddress_  EQU			0x0200
resetVideoTable EQU			0x7fa0
clearRegion     EQU			0x7ea0
convertEqOp     EQU			0x7fbc
convertNeOp     EQU			0x7fc5
convertLeOp     EQU			0x7fce
convertGeOp     EQU			0x7fd7
convertLtOp     EQU			0x7fe0
convertGtOp     EQU			0x7fe9
multiply16bit   EQU			0x7da0
divide16bit     EQU			0x7ca0
clearCursorRow  EQU			0x7ba0
printText       EQU			0x7dc3
printDigit      EQU			0x7aa0
printInt16      EQU			0x79a0
printChar       EQU			0x78a0
printHexByte    EQU			0x7ac2
printHexWord    EQU			0x7de0
newLineScroll   EQU			0x77a0
resetAudio      EQU			0x76a0
playMidi        EQU			0x75a0
playMidiAsync   EQU			0x7eeb
midiStartNote   EQU			0x74a0
convertEqOpAddr  EQU			0x00E2
convertNeOpAddr  EQU			0x00E4
convertLeOpAddr  EQU			0x00E6
convertGeOpAddr  EQU			0x00E8
convertLtOpAddr  EQU			0x00EA
convertGtOpAddr  EQU			0x00EC

; Internal variables
register0       EQU			0x00a0
register1       EQU			register0 + 0x02
register2       EQU			register0 + 0x04
register3       EQU			register0 + 0x06
register4       EQU			register0 + 0x08
register5       EQU			register0 + 0x0A
register6       EQU			register0 + 0x0C
register7       EQU			register0 + 0x0E
register8       EQU			register0 + 0x10
register9       EQU			register0 + 0x12
textColour      EQU			register0 + 0x14
cursorXY        EQU			register0 + 0x16
midiStreamPtr   EQU			register0 + 0x18
midiDelay       EQU			register0 + 0x1A
frameCountPrev  EQU			register0 + 0x1C

; Includes
%include        include/gigatron.i
%include        include/math.i
%include        include/conv_conds.i
%include        include/audio.i
%include        include/clear_screen.i
%include        include/print_text.i
%include        include/macros.i

; Labels
_entryPoint_    EQU			0x0200
_10             EQU			0x024c
_20             EQU			0x09de
_next4          EQU			0x0254
_next5          EQU			0x0258
_next6          EQU			0x025c
_next10         EQU			0x0292
_next18         EQU			0x08d1
0x08a0          EQU			0x08a0
0x09a0          EQU			0x09a0

; Variables
_a              EQU			0x0030
_k              EQU			0x0032
_j              EQU			0x0034
_i              EQU			0x0036
_char           EQU			0x0038

; Strings
usrStr_0x7bdf	EQU			0x7bdf
usrStr_0x7bdf	DB			28 'yahooowalllallllalalalwallla'
usrStr_0x7ff2	EQU			0x7ff2
usrStr_0x7ff2	DB			3 'yes'
usrStr_0x7ff6	EQU			0x7ff6
usrStr_0x7ff6	DB			1 ' '
usrStr_0x76cd	EQU			0x76cd
usrStr_0x76cd	DB			34 'wooooooooooooooooooooooooooooow!!!'
usrStr_0x7ff8	EQU			0x7ff8
usrStr_0x7ff8	DB			3 'dog'

; Code
_entryPoint_    Initialise	
                InitialiseCcOps	                                		; INIT

_10             LDI			1
                STW			_a                                   		; a =1

                LDI			0
                STW			_k                                   		; for k = 0 to 1

_next4          LDI			0
                STW			_j                                   		; for j = 0 to 1

_next5          LDI			0
                STW			_i                                   		; for i = 0 to 1

_next6          PrintString	usrStr_0x7bdf                       		; print "yahooowalllallllalalalwallla";

                PrintString	usrStr_0x7ff2
                PrintString	usrStr_0x7ff6                       		; print "yes";" ";

                PrintInt16	0x003d
                PrintString	usrStr_0x7ff6                       		; print 20*3+1;" ";

                LDI			32
                STW			_char                                		; for char = 32 to 127

_next10         LDW			_a
                ADDI		1
                STW			_a                                   		; a = a + 1

                LDW			_char
                ADDI		1
                ADDW		_a
                ADDW		_a
                ADDW		_a
                SUBI		0
                ADDI		0
                ADDI		0
                ADDI		3
                SUBW		_a
                SUBW		_a
                SUBW		_a
                SUBI		4
                ADDI		0
                STW			0xd0
                LDW			_k
                SUBW		_k
                STW			0xd2
                LDW			0xd0
                ADDW		0xd2
                PrintAcChar	                                    		; print chr$(char+1 +a+a+a - 32*0 + 50/0 + a/0 + 3 - a -a -a -4 + j*0 + (k-k));

                ForNextLoopUp	_char _next10 127               		; next char

                ForNextLoopUp	_i _next6 1                     		; next i

                STW			0xe0
                LDWI		0x08a0
                CALL		giga_vAC

0x08a0          LDW			0xe0
                ForNextLoopUp	_j _next5 1                     		; next j

                ForNextLoopUp	_k _next4 1                     		; next k

                PrintString	usrStr_0x76cd
                LDWI		newLineScroll
                CALL		giga_vAC                             		; print "wooooooooooooooooooooooooooooow!!!"

                LDI			0
                STW			_i                                   		; for i = 0 to 6

_next18         PrintString	usrStr_0x7ff8
                PrintString	usrStr_0x7ff6
                PrintVarInt16	_i
                LDWI		newLineScroll
                CALL		giga_vAC                             		; print "dog";" ";i

                STW			0xe0
                LDWI		0x09a0
                CALL		giga_vAC

0x09a0          LDW			0xe0
                ForNextLoopUp	_i _next18 6                    		; next i

                Initialise	                                    		; cls

_20             LDWI		_10
                CALL		giga_vAC                             		; goto 10


