_startAddress_      EQU                     0x0200
convertEqOp         EQU                     0x7fa0
convertNeOp         EQU                     0x7fa9
convertLeOp         EQU                     0x7fb2
convertGeOp         EQU                     0x7fbb
convertLtOp         EQU                     0x7fc4
convertGtOp         EQU                     0x7fcd
multiply16bit       EQU                     0x7fd6
divide16bit         EQU                     0x7ea0
random16bit         EQU                     0x7ef6
shiftLeft4bit       EQU                     0x7da0
shiftLeft8bit       EQU                     0x7daa
shiftRight1bit      EQU                     0x7db4
shiftRight2bit      EQU                     0x7dbe
shiftRight3bit      EQU                     0x7dc8
shiftRight4bit      EQU                     0x7dd2
shiftRight5bit      EQU                     0x7ddc
shiftRight6bit      EQU                     0x7de6
shiftRight7bit      EQU                     0x7df0
shiftRight8bit      EQU                     0x7ca0
resetVideoTable     EQU                     0x7caa
scanlineMode        EQU                     0x7cc6
waitVBlank          EQU                     0x7cda
clearRegion         EQU                     0x7ba0
clearCursorRow      EQU                     0x7aa0
drawLine            EQU                     0x79a0
drawLineExt         EQU                     0x78a0
drawLinePixel       EQU                     0x7cf1
printText           EQU                     0x7adf
printDigit          EQU                     0x77a0
printInt16          EQU                     0x76a0
printChar           EQU                     0x75a0
printHexByte        EQU                     0x77c2
printHexWord        EQU                     0x74a0
newLineScroll       EQU                     0x73a0
resetAudio          EQU                     0x74b9
playMidi            EQU                     0x72a0
playMidiAsync       EQU                     0x7beb
midiStartNote       EQU                     0x71a0
convertEqOpAddr     EQU                     0x00E2
convertNeOpAddr     EQU                     0x00E4
convertLeOpAddr     EQU                     0x00E6
convertGeOpAddr     EQU                     0x00E8
convertLtOpAddr     EQU                     0x00EA
convertGtOpAddr     EQU                     0x00EC

; Internal variables
register0           EQU                     0x00a0
register1           EQU                     register0 + 0x02
register2           EQU                     register0 + 0x04
register3           EQU                     register0 + 0x06
register4           EQU                     register0 + 0x08
register5           EQU                     register0 + 0x0A
register6           EQU                     register0 + 0x0C
register7           EQU                     register0 + 0x0E
register8           EQU                     register0 + 0x10
register9           EQU                     register0 + 0x12
register10          EQU                     0x0024
register11          EQU                     0x0026
register12          EQU                     0x0028
register13          EQU                     0x002A
fgbgColour          EQU                     register0 + 0x14
cursorXY            EQU                     register0 + 0x16
midiStreamPtr       EQU                     register0 + 0x18
midiDelay           EQU                     register0 + 0x1A
frameCountPrev      EQU                     register0 + 0x1C
textScroll          EQU                     register0 + 0x1E

; Includes
%include            include/gigatron.i
%include            include/math.i
%include            include/conv_conds.i
%include            include/audio.i
%include            include/graphics.i
%include            include/clear_screen.i
%include            include/print_text.i
%include            include/macros.i

; Labels
_entryPoint_        EQU                     0x0200
_1                  EQU                     0x0253
_2                  EQU                     0x029a
_3                  EQU                     0x02a0
_4                  EQU                     0x02ae
_5                  EQU                     0x02ae
_6                  EQU                     0x02c0
_113                EQU                     0x02c9
_50                 EQU                     0x02d3
_119                EQU                     0x02dd
_51                 EQU                     0x02e7
_101                EQU                     0x08a2
_114                EQU                     0x08ac
_53                 EQU                     0x08b6
_116                EQU                     0x08c0
_54                 EQU                     0x08ca
_121                EQU                     0x08d4
_55                 EQU                     0x08de
_117                EQU                     0x08e8
_105                EQU                     0x08f2
_57                 EQU                     0x09a8
_111                EQU                     0x09b2
_48                 EQU                     0x09bc
_112                EQU                     0x09c6
_122                EQU                     0x09d0
_198                EQU                     0x09e3
_199                EQU                     0x09e4
_200                EQU                     0x09e4
_201                EQU                     0x09e8
_202                EQU                     0x0aa6
_203                EQU                     0x0ab4
_204                EQU                     0x0ac2
_205                EQU                     0x0acc
_206                EQU                     0x0acc
_207                EQU                     0x0ace
_208                EQU                     0x0ad0
_209                EQU                     0x0ad2
_end_0x03dd         EQU                     0x0ad4
_if_0x02b4          EQU                     0x02ae
_page_0x08a0        EQU                     0x08a0
_page_0x09a0        EQU                     0x09a0
_next_0x0397        EQU                     0x09e8
_page_0x0aa0        EQU                     0x0aa0

; Variables
_z                  EQU                     0x0030
_k                  EQU                     0x0032
_a                  EQU                     0x0034
_b                  EQU                     0x0036
_c                  EQU                     0x0038
_p                  EQU                     0x003a

; Strings

; Code
_entryPoint_        Initialise              
                    InitialiseCcOps                                         ; INIT

_1                  LDI                     2
                    STW                     graphicsMode
                    ScanlineMode            
                    Initialise              
                    LDI                     2
                    STW                     _z
                    LDWI                    _198
                    CALL                    giga_vAC                        ; mode 2:cls:z=2:gosub 198

_2                  LDWI                    0x0010
                    PEEK                    
                    STW                     _k                              ; k=peek(16)

_3                  LDW                     _k
                    SUBI                    126
                    CALL                    convertGtOpAddr
                    BEQ                     _4                  
                    LDWI                    _2
                    CALL                    giga_vAC                        ; if k>126 then goto 2

_5                  LDWI                    0
                    STW                     register0
                    LDI                     0
                    POKE                    register0
                    LDWI                    0
                    STW                     register0
                    LDI                     0
                    POKE                    register0                       ; poke p,a:poke p+1,b

_6                  LDWI                    44
                    STW                     register0
                    LDI                     30
                    POKE                    register0                       ; poke 44,30:goto2

_113                LDI                     73
                    STW                     _a
                    LDI                     8
                    STW                     _b
                    POP                     
                    RET                                                     ; a=73 :b=8 :return:'C

_50                 LDI                     11
                    STW                     _a
                    LDI                     9
                    STW                     _b
                    POP                     
                    RET                                                     ; a=11 :b=9 :return:'C#

_119                LDI                     80
                    STW                     _a
                    LDI                     9
                    STW                     _b
                    POP                     
                    RET                                                     ; a=80 :b=9 :return:'D

_51                 LDI                     25
                    STW                     _a
                    LDI                     10
                    STW                     _b
                    POP                     
                    RET                                                     ; a=25 :b=10:return:'D#

                    STW                     0xe0
                    LDWI                    _page_0x08a0
                    CALL                    giga_vAC
_page_0x08a0        LDW                     0xe0
_101                LDI                     103
                    STW                     _a
                    LDI                     10
                    STW                     _b
                    POP                     
                    RET                                                     ; a=103:b=10:return:'E

_114                LDI                     57
                    STW                     _a
                    LDI                     11
                    STW                     _b
                    POP                     
                    RET                                                     ; a=57 :b=11:return:'F

_53                 LDI                     16
                    STW                     _a
                    LDI                     12
                    STW                     _b
                    POP                     
                    RET                                                     ; a=16 :b=12:return:'F#

_116                LDI                     108
                    STW                     _a
                    LDI                     12
                    STW                     _b
                    POP                     
                    RET                                                     ; a=108:b=12:return:'G

_54                 LDI                     78
                    STW                     _a
                    LDI                     13
                    STW                     _b
                    POP                     
                    RET                                                     ; a=78 :b=13:return:'G#

_121                LDI                     53
                    STW                     _a
                    LDI                     14
                    STW                     _b
                    POP                     
                    RET                                                     ; a=53 :b=14:return:'A

_55                 LDI                     35
                    STW                     _a
                    LDI                     15
                    STW                     _b
                    POP                     
                    RET                                                     ; a=35 :b=15:return:'A#

_117                LDI                     23
                    STW                     _a
                    LDI                     16
                    STW                     _b
                    POP                     
                    RET                                                     ; a=23 :b=16:return:'B

_105                LDI                     19
                    STW                     _a
                    STW                     0xe0
                    LDWI                    _page_0x09a0
                    CALL                    giga_vAC
_page_0x09a0        LDW                     0xe0
                    LDI                     17
                    STW                     _b
                    POP                     
                    RET                                                     ; a=19 :b=17:return:'C

_57                 LDI                     21
                    STW                     _a
                    LDI                     18
                    STW                     _b
                    POP                     
                    RET                                                     ; a=21 :b=18:return:'C#

_111                LDI                     31
                    STW                     _a
                    LDI                     19
                    STW                     _b
                    POP                     
                    RET                                                     ; a=31 :b=19:return:'D

_48                 LDI                     50
                    STW                     _a
                    LDI                     20
                    STW                     _b
                    POP                     
                    RET                                                     ; a=50 :b=20:return:'D#

_112                LDI                     77
                    STW                     _a
                    LDI                     21
                    STW                     _b
                    POP                     
                    RET                                                     ; a=77 :b=21:return:'E

_122                LDW                     _z
                    ADDI                    1
                    STW                     mathX
                    LDI                     4
                    STW                     mathY
                    LDWI                    divide16bit
                    CALL                    giga_vAC
                    LDW                     mathRem
                    STW                     _z                              ; z=(z+1)%4:goto200

_198                PUSH                                                    ; ?" 2 3   5 6 7   9 0"

_200                LDI                     1
                    STW                     _c                              ; for c=1 to 4

_201                LDWI                    256
                    STW                     mathX
                    LDW                     _c
                    STW                     mathY
                    LDWI                    multiply16bit
                    CALL                    giga_vAC
                    STW                     0xe0
                    LDWI                    _page_0x0aa0
                    CALL                    giga_vAC
_page_0x0aa0        LDW                     0xe0
                    ADDI                    252
                    STW                     _p                              ; p=256*c+252:pokep-1,z

_202                LDI                     0
                    POKE                    _p
                    LDW                     _p
                    ADDI                    1
                    STW                     0xd0
                    LDI                     0
                    POKE                    0xd0                            ; poke p,0:poke p+1,0

_203                ForNextLoopUp           _c _201                 4       ; next c

_204                LDI                     2
                    ST                      cursorXY
                    LDI                     24
                    ADDI                    0x08
                    ST                      cursorXY + 1                    ; at 2,24:print"Z: ";

_206                POP                     
                    RET                                                     ; ?"Metallic":return

_207                POP                     
                    RET                                                     ; ?"Triangle":return

_208                POP                     
                    RET                                                     ; ?"Pulse   ":return

_209                POP                     
                    RET                                                     ; ?"Sawtooth":return

_end_0x03dd         BRA                     _end_0x03dd                     ; END


